@using Microsoft.AspNetCore.Identity
@inject SignInManager<Weather_forecast.Models.ApplicationUser> signInManager
@model Weather_forecast.ViewModels.CityAndApi
@{
    ViewData["Title"] = "Home Page";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>


<div class="text-center">
    @if (signInManager.IsSignedIn(User))
    {
        <h1 class="display-4">Welcome to the weather forecast app</h1>
        @if (ViewData["showHistory"] == "true")
        {
            <form asp-action="History" asp-controller="Home" method="get">
                <button type="submit" style="width:150px; height:30px;">Get Search History</button>
            </form>
        }
        <p>Search for a city to see its current weather:</p>
        <form asp-action="City" asp-controller="Home" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="City.CityName" />
            <input asp-for="ForecastDate" />
            <button type="submit" style="width:100px; height:30px;">Search</button>
            <span asp-validation-for="City.CityName" class="text-danger"></span>
        </form>
    }
    else if (ViewBag.SharedUrl != null)
    {
        <div>
            <h4>Want to see the forecast without relying on other people to share it to you?</h4>
            <a class="text-dark h4" asp-area="" asp-controller="Account" asp-action="Register"> Register </a>
            |
            <a class="text-dark h4" asp-controller="Account" asp-action="Login"> Login </a>
        </div>
    }
    @if (Model != null)
    {
        @if (ViewBag.error == true)
        {
            <div style="margin-top: 0.5rem;">
                Failed to fetch weather data for @Model.City.CityName
            </div>
        }
        @if (Model.Weather != null)
        {
            @if (!string.IsNullOrEmpty(Model.Weather.resolvedAddress))
            {
                DateTime currentDate = DateTime.Now;
                DateTime displayDate = DateTime.Now;
                int dayDifference = 0;
                int hourTime = int.Parse(currentDate.ToString("%h"));
                if (Model.ForecastDate != null)
                {
                    DateTime notNullableDate = (DateTime)Model.ForecastDate;
                    dayDifference = (notNullableDate.Date - currentDate.Date).Days;
                    hourTime = int.Parse(notNullableDate.ToString("%H"));
                    int totalDays = Model.Weather.days.Count - 1;
                    if (dayDifference > totalDays)
                    {
                        dayDifference = totalDays;
                        ViewBag.dateError = $"Cannot forecast weather longer than {totalDays} days, defaulted to day {totalDays}";
                    }
                    if (dayDifference < 0)
                    {
                        dayDifference = 0;
                        ViewBag.dateError = "Cannot forecast weather in the past, defaulted to today";
                    }
                    displayDate = displayDate.AddDays(dayDifference);
                }
                <p style="color: red;">@ViewBag.dateError</p>

                string forecastTime = Model.Weather.days[dayDifference].hours[hourTime].datetime;

                <table style="border: 3px solid black; margin-left: auto; margin-right: auto; max-width: 500px; width: fit-content; margin-top: 10px">
                    <tr style="border: 3px solid black">
                        <th colspan="3" style="text-align:center; font-size: 40px;">@Model.Weather.resolvedAddress (@displayDate.ToString().Substring(0, 10) @forecastTime)</th>
                    </tr>
                    <tr style="border: 3px solid black">
                        <td style="text-align: center; padding: 10px; font-size: 40px; padding: 10px; white-space: nowrap">
                            @Model.Weather.days[dayDifference].hours[hourTime].conditions<br />
                            @switch (Model.Weather.days[dayDifference].hours[hourTime].icon)
                            {
                                case "snow":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow.svg">
                                    break;
                                case "snow-showers-day":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-day.svg">
                                    break;
                                case "snow-showers-night":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-night.svg">
                                    break;
                                case "thunder-rain":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-rain.svg">
                                    break;
                                case "thunder-showers-day":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-day.svg">
                                    break;
                                case "thunder-showers-night":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-night.svg">
                                    break;
                                case "rain":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/rain.svg">
                                    break;
                                case "showers-day":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-day.svg">
                                    break;
                                case "showers-night":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-night.svg">
                                    break;
                                case "fog":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/1st%20Set%20-%20Color/fog.svg">
                                    break;
                                case "wind":
                                    <img style="width:250px;" src="https://www.svgrepo.com/show/528823/wind.svg">
                                    break;
                                case "cloudy":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/cloudy.svg">
                                    break;
                                case "partly-cloudy-day":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-day.svg">
                                    break;
                                case "partly-cloudy-night":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-night.svg">
                                    break;
                                case "clear-day":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-day.svg">
                                    break;
                                case "clear-night":
                                    <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-night.svg">
                                    break;
                                default:
                                    <span>Image for: @Model.Weather.days[dayDifference].hours[hourTime].icon does not exist</span>
                                    break;
                            }
                        </td>
                        <td style="text-align: center; font-size: 40px; padding: 10px;">@Model.Weather.days[dayDifference].hours[hourTime].temp°C</td>
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Feels like<br />@Model.Weather.days[dayDifference].hours[hourTime].feelslike°C</td>
                    </tr>
                    <tr style="border: 3px solid black">
                        <td style="text-align: center; font-size: 40px; padding: 10px" colspan="3">@Model.Weather.description</td>
                    </tr>
                    <tr style="border: 3px solid black">
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Wind speed<br />@Model.Weather.days[dayDifference].hours[hourTime].windspeed km/h</td>
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain amount<br />@Model.Weather.days[dayDifference].hours[hourTime].precip mm</td>
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain chance<br />@Model.Weather.days[dayDifference].hours[hourTime].precipprob %</td>
                    </tr>
                    <tr style="border: 3px solid black">
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Humidity<br />@Model.Weather.days[dayDifference].hours[hourTime].humidity %</td>
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Cloud cover<br />@Model.Weather.days[dayDifference].hours[hourTime].cloudcover %</td>
                        <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Visibility<br />@Model.Weather.days[dayDifference].hours[hourTime].visibility km</td>
                    </tr>
                </table>
            }
            @if (signInManager.IsSignedIn(User) && ViewBag.SharedUrl == null)
            {
                <button onclick="showModal()">Share this forecast!</button>
            }
            <div class="text-center" style="margin-top: 0.5rem; margin-bottom: 0.5rem;">
                <button onclick="showGoogleMap()">Show google map</button>
                <button onclick="showLightingMap()">Show lighting map</button>
            </div>
            <iframe id="googlemap" width="800" height="550" id="gmap_canvas" src=@Model.EmbedUrl frameborder="0" scrolling="no" marginheight="0" marginwidth="0" hidden></iframe>
            <iframe id="lightingmap" src=@Model.LightingEmbedUrl width="800" height="550" frameBorder="0" marginheight="0" marginwidth="0" hidden></iframe>
        }
    }
    @if (signInManager.IsSignedIn(User))
    {
        <div id="shareLink" hidden>@ViewBag.ShareLink</div>
        <div id="city" hidden>@ViewBag.City</div>
    }
</div>
@if (signInManager.IsSignedIn(User))
{
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Share your link!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <a>@ViewBag.ShareLink</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="copyToClipboard()">Copy to clipboard!</button>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function showModal(){
        fetch(`/Home/ShareLink?city=${encodeURIComponent(document.getElementById("city").innerText)}&uid=@ViewBag.Uid&shareToken=@ViewBag.ShareToken`, {
        method: 'POST'
        })
        $(document).ready(function() {
        $("#exampleModal").modal("show");
        });
        }


        @*https://masteringjs.io/tutorials/fundamentals/copy-to-clipboard*@
        function copyToClipboard() {
        const element = document.querySelector('#shareLink');
        navigator.clipboard.writeText(element.innerText).then(function() {
        console.log('Async: Copying to clipboard was successful!');
        }, function(err) {
        console.error('Async: Could not copy text: ', err);
        });
        }
        function showGoogleMap(){
        document.getElementById("lightingmap").hidden = true
        document.getElementById("googlemap").hidden = false
        }
        function showLightingMap(){
        document.getElementById("googlemap").hidden = true
        document.getElementById("lightingmap").hidden = false
        }
    </script>
}
else if (ViewBag.SharedUrl != null)
{
    <script type="text/javascript">
        function showGoogleMap(){
        document.getElementById("lightingmap").hidden = true
        document.getElementById("googlemap").hidden = false
        }
        function showLightingMap(){
        document.getElementById("googlemap").hidden = true
        document.getElementById("lightingmap").hidden = false
        }
    </script>
}
else
{
    <div class="text-center">
        <h1 class="display-6">Please make an account or login to see the forecast</h1>
        <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
    </div>
}


@*

@if (signInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Welcome to the weather forecast app</h1>
        @if (ViewData["showHistory"] == "true")
        {
            <form asp-action="History" asp-controller="Home" method="get">
                <button type="submit" style="width:150px; height:30px;">Get Search History</button>
            </form>
        }
        <p>Search for a city to see its current weather:</p>
        <form asp-action="City" asp-controller="Home" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="City.CityName" />
            <input asp-for="ForecastDate" />
            <button type="submit" style="width:100px; height:30px;">Search</button>
            <span asp-validation-for="City.CityName" class="text-danger"></span>
        </form>
        @if (Model != null)
        {
            @if (ViewBag.error == true)
            {
                <div style="margin-top: 0.5rem;">
                    Failed to fetch weather data for @Model.City.CityName
                </div>
            }
            @if (Model.Weather != null)
            {
                @if (!string.IsNullOrEmpty(Model.Weather.resolvedAddress))
                {
                    DateTime currentDate = DateTime.Now;
                    DateTime displayDate = DateTime.Now;
                    int dayDifference = 0;
                    int hourTime = int.Parse(currentDate.ToString("%h"));
                    if (Model.ForecastDate != null)
                    {
                        DateTime notNullableDate = (DateTime)Model.ForecastDate;
                        dayDifference = (notNullableDate.Date - currentDate.Date).Days;
                        hourTime = int.Parse(notNullableDate.ToString("%H"));
                        int totalDays = Model.Weather.days.Count - 1;
                        if (dayDifference > totalDays)
                        {
                            dayDifference = totalDays;
                            ViewBag.dateError = $"Cannot forecast weather longer than {totalDays} days, defaulted to day {totalDays}";
                        }
                        if (dayDifference < 0)
                        {
                            dayDifference = 0;
                            ViewBag.dateError = "Cannot forecast weather in the past, defaulted to today";
                        }
                        displayDate = displayDate.AddDays(dayDifference);
                    }
                    <p style="color: red;">@ViewBag.dateError</p>

                    string forecastTime = Model.Weather.days[dayDifference].hours[hourTime].datetime;

                    <table style="border: 3px solid black; margin-left: auto; margin-right: auto; max-width: 500px; width: fit-content; margin-top: 10px">
                        <tr style="border: 3px solid black">
                            <th colspan="3" style="text-align:center; font-size: 40px;">@Model.Weather.resolvedAddress (@displayDate.ToString().Substring(0, 10) @forecastTime)</th>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; padding: 10px; font-size: 40px; padding: 10px; white-space: nowrap">
                                @Model.Weather.days[dayDifference].hours[hourTime].conditions<br />
                                @switch (Model.Weather.days[dayDifference].hours[hourTime].icon)
                                {
                                    case "snow":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow.svg">
                                        break;
                                    case "snow-showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-day.svg">
                                        break;
                                    case "snow-showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-night.svg">
                                        break;
                                    case "thunder-rain":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-rain.svg">
                                        break;
                                    case "thunder-showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-day.svg">
                                        break;
                                    case "thunder-showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-night.svg">
                                        break;
                                    case "rain":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/rain.svg">
                                        break;
                                    case "showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-day.svg">
                                        break;
                                    case "showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-night.svg">
                                        break;
                                    case "fog":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/1st%20Set%20-%20Color/fog.svg">
                                        break;
                                    case "wind":
                                        <img style="width:250px;" src="https://www.svgrepo.com/show/528823/wind.svg">
                                        break;
                                    case "cloudy":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/cloudy.svg">
                                        break;
                                    case "partly-cloudy-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-day.svg">
                                        break;
                                    case "partly-cloudy-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-night.svg">
                                        break;
                                    case "clear-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-day.svg">
                                        break;
                                    case "clear-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-night.svg">
                                        break;
                                    default:
                                        <span>Image for: @Model.Weather.days[dayDifference].hours[hourTime].icon does not exist</span>
                                        break;
                                }
                            </td>
                            <td style="text-align: center; font-size: 40px; padding: 10px;">@Model.Weather.days[dayDifference].hours[hourTime].temp°C</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Feels like<br />@Model.Weather.days[dayDifference].hours[hourTime].feelslike°C</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px" colspan="3">@Model.Weather.description</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Wind speed<br />@Model.Weather.days[dayDifference].hours[hourTime].windspeed km/h</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain amount<br />@Model.Weather.days[dayDifference].hours[hourTime].precip mm</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain chance<br />@Model.Weather.days[dayDifference].hours[hourTime].precipprob %</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Humidity<br />@Model.Weather.days[dayDifference].hours[hourTime].humidity %</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Cloud cover<br />@Model.Weather.days[dayDifference].hours[hourTime].cloudcover %</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Visibility<br />@Model.Weather.days[dayDifference].hours[hourTime].visibility km</td>
                        </tr>
                    </table>
                }
                @if(ViewBag.SharedUrl == null)
                {
                    <button onclick="showModal()">Share this forecast!</button>
                }
                <div class="text-center" style="margin-top: 0.5rem; margin-bottom: 0.5rem;">
                    <button onclick="showGoogleMap()">Show google map</button>
                    <button onclick="showLightingMap()">Show lighting map</button>
                </div>
                <iframe id="googlemap" width="800" height="550" id="gmap_canvas" src=@Model.EmbedUrl frameborder="0" scrolling="no" marginheight="0" marginwidth="0" hidden></iframe>
                <iframe id="lightingmap" src=@Model.LightingEmbedUrl width="800" height="550" frameBorder="0" marginheight="0" marginwidth="0" hidden></iframe>

            }
        }
        <div id="shareLink" hidden>@ViewBag.ShareLink</div>
        <div id="city" hidden>@ViewBag.City</div>
    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Share your link!</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <a>@ViewBag.ShareLink</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="copyToClipboard()">Copy to clipboard!</button>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function showModal(){
        fetch(`/Home/ShareLink?city=${encodeURIComponent(document.getElementById("city").innerText)}&uid=@ViewBag.Uid&shareToken=@ViewBag.ShareToken`, {
            method: 'POST'
        })
         $(document).ready(function() {
             $("#exampleModal").modal("show");
         });
        }



        function copyToClipboard() {
          const element = document.querySelector('#shareLink');
          navigator.clipboard.writeText(element.innerText).then(function() {
          console.log('Async: Copying to clipboard was successful!');
        }, function(err) {
          console.error('Async: Could not copy text: ', err);
        });
        }
                function showGoogleMap(){
            document.getElementById("lightingmap").hidden = true
            document.getElementById("googlemap").hidden = false
        }
        function showLightingMap(){
            document.getElementById("googlemap").hidden = true
            document.getElementById("lightingmap").hidden = false
        }
    </script>
}
else if (ViewBag.SharedUrl != null)
{
    <div class="text-center">
        <div>
            <h4>Want to see the forecast without relying on other people to share it to you?</h4>
            <a class="text-dark h4" asp-area="" asp-controller="Account" asp-action="Register"> Register </a>
             | 
            <a class="text-dark h4" asp-controller="Account" asp-action="Login"> Login </a>
        </div>
        @if (Model != null)
        {
            @if (ViewBag.error == true)
            {
                <div style="margin-top: 0.5rem;">
                    Failed to fetch weather data for @Model.City.CityName
                </div>
            }
            @if (Model.Weather != null)
            {
                @if (Model.Weather.resolvedAddress != null || Model.Weather.resolvedAddress != "")
                {
                    <div style="margin-top: 0.5rem;">
                        @Model.Weather.resolvedAddress temperatuur on @Model.Weather.currentConditions.temp C
                    </div>
                }
                <div class="text-center" style="margin-top: 0.5rem; margin-bottom: 0.5rem;">
                    <button onclick="showGoogleMap()">Show google map</button>
                    <button onclick="showLightingMap()">Show lighting map</button>
                </div>
                <iframe id="googlemap" width="800" height="550" id="gmap_canvas" src=@Model.EmbedUrl frameborder="0" scrolling="no" marginheight="0" marginwidth="0" hidden></iframe>
                <iframe id="lightingmap" src=@Model.LightingEmbedUrl width="800" height="550" frameBorder="0" marginheight="0" marginwidth="0" hidden></iframe>
            }
        }
    </div>
    <script type="text/javascript">
        function showGoogleMap(){
            document.getElementById("lightingmap").hidden = true
            document.getElementById("googlemap").hidden = false
        }
        function showLightingMap(){
            document.getElementById("googlemap").hidden = true
            document.getElementById("lightingmap").hidden = false
        }
    </script>
}
else
{
    <div class="text-center">
        <h1 class="display-6">Please make an account or login to see the forecast</h1>
        <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
    </div>
}
@*<iframe width="600" height="500" id="gmap_canvas" src="https://maps.google.com/maps?q=59.4372+24.7453&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe>

        *@