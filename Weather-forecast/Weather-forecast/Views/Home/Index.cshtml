﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<Weather_forecast.Models.ApplicationUser> signInManager
@model Weather_forecast.ViewModels.CityAndApi
@{
    ViewData["Title"] = "Home Page";
}
@if (signInManager.IsSignedIn(User))
{
    <div class="text-center">
        <h1 class="display-4">Welcome to the weather forecast app</h1>
        @if (ViewData["showHistory"] == "true")
        {
            <form asp-action="History" asp-controller="Home" method="get">
                <button type="submit" style="width:150px; height:30px;">Get Search History</button>
            </form>
        }
        <p>Search for a city to see its current weather:</p>
        <form asp-action="City" asp-controller="Home" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="City.CityName" />
            <input asp-for="ForecastDate" />
            <button type="submit" style="width:100px; height:30px;">Search</button>
            <span asp-validation-for="City.CityName" class="text-danger"></span>
        </form>
        @if (Model != null)
        {
            @if (ViewBag.error == true)
            {
                <div style="margin-top: 0.5rem;">
                    Failed to fetch weather data for @Model.City.CityName
                </div>
            }
            @if (Model.Weather != null)
            {
                @if (!string.IsNullOrEmpty(Model.Weather.resolvedAddress))
                {
                    DateTime currentDate = DateTime.Now;
                    int dayDifference = 0;
                    int hourTime = currentDate.Hour;
                    Console.WriteLine($"View Time: {Model.ForecastDate}");
                    if (Model.ForecastDate != null)
                    {
                        DateTime notNullableDate = (DateTime)Model.ForecastDate;
                        dayDifference = (notNullableDate.Date - currentDate.Date).Days;
                        hourTime = notNullableDate.Date.Hour;
                        if (dayDifference > 15)
                        {
                            dayDifference = 15;
                            ViewBag.dateError = "Cannot forecast weather longer than 15 days, defaulted to day 15";
                        }
                        if (dayDifference < 0)
                        {
                            dayDifference = 0;
                            ViewBag.dateError = "Cannot forecast weather in the past, defaulted to today";
                        }
                    }
                    Console.WriteLine($"DayDiff: {dayDifference}");
                    Console.WriteLine($"Hour: {hourTime}");
                    <p>@ViewBag.dateError</p>
                    string forecastTime = Model.Weather.days[dayDifference].hours[hourTime].datetime;
                    Console.WriteLine($"Forecast Time:{forecastTime}");
                    @* forecastTime = forecastTime.Substring(0, 5); *@
                    <table style="border: 3px solid black; margin-left: auto; margin-right: auto; max-width: 500px; width: fit-content; margin-top: 10px">
                        <tr style="border: 3px solid black">
                            <th colspan="3" style="text-align:center; font-size: 40px;">@Model.Weather.resolvedAddress (@forecastTime)</th>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; padding: 10px; font-size: 40px; padding: 10px; white-space: nowrap">
                                @Model.Weather.currentConditions.conditions<br />
                                @switch (Model.Weather.currentConditions.icon)
                                {
                                    case "snow":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow.svg">
                                        break;
                                    case "snow-showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-day.svg">
                                        break;
                                    case "snow-showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/snow-showers-night.svg">
                                        break;
                                    case "thunder-rain":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-rain.svg">
                                        break;
                                    case "thunder-showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-day.svg">
                                        break;
                                    case "thunder-showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/thunder-showers-night.svg">
                                        break;
                                    case "rain":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/rain.svg">
                                        break;
                                    case "showers-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-day.svg">
                                        break;
                                    case "showers-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/showers-night.svg">
                                        break;
                                    case "fog":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/1st%20Set%20-%20Color/fog.svg">
                                        break;
                                    case "wind":
                                        <img style="width:250px;" src="https://www.svgrepo.com/show/528823/wind.svg">
                                        break;
                                    case "cloudy":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/cloudy.svg">
                                        break;
                                    case "partly-cloudy-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-day.svg">
                                        break;
                                    case "partly-cloudy-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/partly-cloudy-night.svg">
                                        break;
                                    case "clear-day":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-day.svg">
                                        break;
                                    case "clear-night":
                                        <img style="width:250px;" src="https://raw.githubusercontent.com/visualcrossing/WeatherIcons/58c79610addf3d4d91471abbb95b05e96fb43019/SVG/3rd%20Set%20-%20Color/clear-night.svg">
                                        break;
                                    default:
                                        <span>Image for: @Model.Weather.currentConditions.icon does not exist</span>
                                        break;
                                }
                            </td>
                            <td style="text-align: center; font-size: 40px; padding: 10px;">@Model.Weather.currentConditions.temp°C</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Feels like<br />@Model.Weather.currentConditions.feelslike°C</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px" colspan="3">@Model.Weather.description</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Wind speed<br />@Model.Weather.currentConditions.windspeed km/h</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain amount<br />@Model.Weather.currentConditions.precip mm</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Rain chance<br />@Model.Weather.currentConditions.precipprob %</td>
                        </tr>
                        <tr style="border: 3px solid black">
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Humidity<br />@Model.Weather.currentConditions.humidity %</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Cloud cover<br />@Model.Weather.currentConditions.cloudcover %</td>
                            <td style="text-align: center; font-size: 40px; padding: 10px; white-space: nowrap">Visibility<br />@Model.Weather.currentConditions.visibility km</td>
                        </tr>
                    </table>
                }
            }
        }
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-6">Please make an account or login to see the forecast</h1>
        <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
    </div>
}

